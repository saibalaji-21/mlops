name: ML CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"  # Use the Python version your project requires

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run linting (optional)
      - name: Run linting
        run: |
          pip install flake8  # Install flake8 for linting
          flake8 .  # Run flake8 on the project

      # Step 5: Run unit tests
      - name: Run unit tests
        run: |
          pip install pytest  # Install pytest if not already in requirements.txt
          pytest tests/  # Run tests in the tests/ directory

  train-model:
    runs-on: ubuntu-latest
    needs: setup-and-test  # Ensure setup-and-test job runs first
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow numpy matplotlib    # changed from requirements.txt

      # Step 4: Train the model
      - name: Train model
        run: |
          python train.py  # Replace with your training script

      # Step 5: Save the trained model (optional)
      - name: Save trained model
        run: |
          mkdir -p models
          python save_model.py  # Replace with your script to save the model

  deploy-model:
    runs-on: ubuntu-latest
    needs: train-model  # Ensure train-model job runs first
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Package the model as a Docker container (optional)
      - name: Build Docker image
        run: |
          docker build -t my-ml-model:latest .  # Replace with your Dockerfile

      # Step 5: Deploy the model locally (example: run a Flask API)
      - name: Deploy model locally
        run: |
          python deploy.py  # Replace with your deployment script
